
import { toast } from "sonner";

export type VideoMetadata = {
  id: string;
  title: string;
  author: string;
  description: string;
  thumbnailUrl: string;
  uploadDate: string;
  duration: number;
};

export type SummaryResponse = {
  summary: string;
};

export type MessageResponse = {
  content: string;
};

export const generateSummary = async ({ videoId }: { videoId: string }): Promise<SummaryResponse> => {
  try {
    // In a real app, this would call an actual API
    // For now, we'll simulate a response
    console.log('Generating summary for video:', videoId);
    
    // Simulate API call delay
    await new Promise(resolve => setTimeout(resolve, 1500));
    
    return {
      summary: "This is an automatically generated summary of the video content. In a real application, this would be generated by an AI service analyzing the video content. The summary would include key points, topics discussed, and important moments from the video."
    };
  } catch (error) {
    console.error('Error generating summary:', error);
    throw new Error('Failed to generate summary');
  }
};

export const sendMessage = async ({ videoId, message }: { videoId: string; message: string }): Promise<MessageResponse> => {
  try {
    // In a real app, this would call an actual API
    console.log('Sending message for video:', videoId, 'Message:', message);
    
    // Simulate API call delay
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    return {
      content: `This is an AI response to your message: "${message}". In a real application, this would be generated by processing your question in context with the video content.`
    };
  } catch (error) {
    console.error('Error sending message:', error);
    throw new Error('Failed to send message');
  }
};
